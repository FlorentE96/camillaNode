<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=100vw, initial-scale=1.0">
    <title>CamillaDSP</title>
    <link rel="stylesheet" href="main.css">
</head>
<body>
<%- include('header.ejs'); %>

<style>
    .knob {
        --bck: 120;                
        display: inline-flex;
        position: relative;
        align-items: center;
        justify-content: center;
        width: 70px;
        aspect-ratio: 1;
        margin: 15px;
        margin-top: 35px;
        border-radius: 50%;
        background:hsl(var(--bck), 30%, 70%);   
        border: 0px solid 333;
        /* box-shadow: inset 0px -6px 1px 2px rgba(0, 0, 0, 0.35), 0px 7px 40px 11px rgba(84, 81, 97, 0.4), 0px 0px 8px 0px hsl(var(--bck), 30%, 70%);      */
        box-shadow: 0px 0px 8px 0px hsl(var(--bck), 30%, 70%); 
    }

    .knob::before {
        content: attr(label);
        display: flex;
        align-items: center;
        justify-content: center;
        position: absolute;
        top:-25px;
        width: 100%;
        height: auto;
        font-size: 14px;
        color: #DDD;
    }

    .knobHead {
        display: block;
        width: 80%;
        height: 80%;
        margin: auto;
        border-radius: 50%;
        background: radial-gradient(#777,#555);     
        border: none;             
        cursor:grabbing;
        box-shadow: inset 0px -3px 1px 1px #222;
        
    }

    .knobHeadDot {         
        content: '';       
        display: block;        
        background:#999;
        border-radius: 0%;
        width: 3%;
        height: 12%;      
        position: absolute;  
        bottom: 20%;
        left:50%;
        transform: translateX(-50%);
        transform-origin: 0px -180%;      
    }

    .knobVal {
        position: absolute;
        bottom: -25px;
        font-size: 13px;
        opacity: 1;
        transition: all 500ms;
    }

</style>


<div class="knob" label="Volume" size="70">
    <div class="knobHead">
        <div class="knobHeadDot" val="0"></div>        
    </div>
    <div class="knobVal"></div>
</div>


<div class="knob" label="Crossfeed" size="70px">
    <div class="knobHead">
        <div class="knobHeadDot" val="0"></div>        
    </div>
    <div class="knobVal"></div>
</div>

<div class="knob" label="Tone" size="70px">
    <div class="knobHead">
        <div class="knobHeadDot" val="0"></div>        
    </div>
    <div class="knobVal"></div>
</div>

<script defer>

    const observer = new MutationObserver(function(muts){
        muts.forEach(function(mut){
            // console.log(mut)
            if (mut.type=="attributes" && mut.attributeName=="val") {
                // console.log("Mutation")
                const dot = mut.target;
                const val = dot.getAttribute(mut.attributeName);
                dot.style = 'transform: rotate('+val+'deg);'
                const hue=180-val/2;
                dot.parentElement.parentElement.style= '--bck:'+hue;
                const valElement = dot.parentElement.parentElement.children[1];
                valElement.innerText=(val-31)/10;
                valElement.style.opacity='1';
                setTimeout(function(e){e.style.opacity='0';},1000,valElement);                
            }
        })
    })

    
    const heads = document.getElementsByClassName('knobHead');        
    for (let i=0;i<=heads.length-1;i++) {
          
        observer.observe(heads[i].children[0], {attributes:true});
        heads[i].children[0].setAttribute('val','31')
        heads[i].addEventListener("wheel",function(e){            
            const direction = e.deltaY>0?1:-1;  
            const dot=heads[i].children[0];          

            let val=parseInt(dot.getAttribute("val"));
            if (direction<0 && val==31) return;
            if (direction>0 && val==361) return;
            dot.setAttribute("val",val+10*direction);            
        })        
        
    } 
</script>

</body>
</html>
