<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=100vw, initial-scale=1.0">
    <title>CamillaDSP</title>
    <link rel="stylesheet" href="main.css">
</head>
<body>
<%- include('header.ejs'); %>

<style>
    .knob {
        display: flex;
        position: relative;
        align-items: center;
        justify-content: center;
        width: 60px;
        height: 60px;
        margin: 20px;
        border-radius: 50%;
        background:hsl(180, 30%, 70%);   
        border: none;
        /* box-shadow: inset 0px -6px 1px 2px rgba(0, 0, 0, 0.35), 0px 7px 40px 11px rgba(84, 81, 97, 0.4);  */
        

        
    }


    .knobHead {
        display: block;
        width: 85%;
        height: 85%;
        margin: auto;
        border-radius: 50%;
        background: #555;     
        border: none;             

    }

    .knobHeadDot {         
        content: '';       
        display: block;        
        background:white;
        border-radius: 50%;
        width: 10px;
        height: 10px;      
        position: absolute;  
        bottom: 8px;
        left:50%;
        transform: translateX(-50%);
        transform-origin: 0px -12px;      

    }

</style>


<div class="knob">
    <div class="knobHead" val="12">
        <div class="knobHeadDot" val="0"></div>        
    </div>
    <div class="knobVal"></div>
</div>


<div class="knob">
    <div class="knobHead" val="12">
        <div class="knobHeadDot" val="0"></div>        
    </div>
    <div class="knobVal"></div>
</div>

<div class="knob">
    <div class="knobHead" val="12">
        <div class="knobHeadDot" val="0"></div>        
    </div>
    <div class="knobVal"></div>
</div>

<script defer>

    const observer = new MutationObserver(function(muts){
        muts.forEach(function(mut){
            if (mut.type=="attributes" && mut.attributeName=="val") {
                const dot = mut.target;
                const val = dot.getAttribute(mut.attributeName);
                dot.style = 'transform: rotate('+val+'deg);'
                const hue=180-val/2;
                dot.parentElement.parentElement.style= 'background-color: hsl('+hue+',30%,70%)';
            }
        })
    })

    
    const heads = document.getElementsByClassName('knobHead');
    console.log(heads)
    for (let i=0;i<=heads.length-1;i++) {        
        heads[i].addEventListener("wheel",function(e){            
            const dir = e.deltaY>0?1:-1;                        
            const dot=heads[i].children[0];
            observer.observe(dot, {attributes:true});
            let val=parseInt(dot.getAttribute("val"));
            dot.setAttribute("val",val+10*dir);            
        })
    } 
</script>

</body>
</html>
