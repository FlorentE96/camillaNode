<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=100vw, initial-scale=1.0">
    <title>CamillaDSP</title>
    <script src="camillaControl.js"></script>
    <link rel="stylesheet" href="main.css">
</head>
<body>

<%- include('header.ejs'); %>

<div class="section" id="deviceSettings">

</div>

</body>
<script>
    const defaultSampleRates = [44100, 48000, 88200, 96000, 176400, 192000, 352800, 384000, 705600, 768000]
    const fieldTypes=[
        {"samplerate":"select"},
        {"chunksize":"number"},
        {"quelimit":"number"},
        {"silence_threshold":"number"},
        {"silence_timeout":"number"},
        {"capture":"object"},
        {"playback":"object"},        
    ]

    connectToDsp().then(()=>{    
    downloadConfigFromDSP().then((data=>{

        DSPConfig=data;
        settings = document.getElementById('deviceSettings');
        console.log(DSPConfig.devices);
        for (configItem of Object.keys(DSPConfig.devices)) {            
            
            let type = fieldTypes.find(e=>configItem==Object.keys(e)[0]);
            if (type==undefined) continue; let dataType = type[Object.keys(type)];
            let val;

            switch (dataType) {
                case "number":
                    val = document.createElement('input');
                    val.type='number';
                    val.value=DSPConfig.devices[configItem];
                    break;
                case "object":
                    val = document.createElement('input');
                    val.type='text';
                    val.value=DSPConfig.devices[configItem];
                    break;
                case "select":
                    val = document.createElement('input');
                    val.type='text';
                    val.value=DSPConfig.devices[configItem];
                    break;
                default:
                    break;
            }
            
            let p = document.createElement('p');
            let label = document.createElement('span');
            label.innerText=configItem
            
            p.appendChild(label);
            p.appendChild(val);
            settings.appendChild(p);

        }
    }))
})


</script>
</html>